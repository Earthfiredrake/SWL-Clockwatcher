<Window x:Class="Clockwatcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Clockwatcher"
        xmlns:ikrv="clr-namespace:IKriv.Windows.Controls.Behaviors"
        mc:Ignorable="d"
        Title="SWL Cooldowns" Height="350" Width="300" Activated="ClearTaskbarAlert" StateChanged="ClearTaskbarAlert">
    <Window.Resources>
        <local:TimeFormatConverter x:Key="timeFormatter" />
        <local:InverseBooleanConverter x:Key="invertBool" />
        <DataTemplate DataType="{x:Type local:CharacterTimers}">
            <Grid ScrollViewer.CanContentScroll="True">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <DataGrid ItemsSource="{Binding TimerList, Mode=OneTime}" CanUserAddRows="False" CanUserDeleteRows="False" RowDetailsVisibilityMode="Collapsed" AutoGenerateColumns="False" IsReadOnly="True" KeyboardNavigation.TabNavigation="None">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name, Mode=OneTime}" Header="Timer" IsReadOnly="True">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding RemainingTime, Converter={StaticResource timeFormatter}, Mode=OneWay}" Header="Time Left" SortDirection="Ascending" IsReadOnly="True">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="IsHitTestVisible" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Class, Mode=OneWay}" Value="{x:Static local:TimerClass.AgentMission}">
                                    <Setter Property="Background" Value="#FF90A9CD" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Class, Mode=OneWay}" Value="{x:Static local:TimerClass.AgentRecovery}">
                                    <Setter Property="Background" Value="#FFEA796D" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Class, Mode=OneWay}" Value="{x:Static local:TimerClass.Lair}">
                                    <Setter Property="Background" Value="#FFB790C9" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
                <Button Content="Clear Ready" Width="75" Grid.Row="1" Command="{Binding ClearReadyCommand, Mode=OneTime}" HorizontalAlignment="Center" Margin="5"/>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:ConfigPanel}">
            <StackPanel Margin="3" CanVerticallyScroll="False" >
                <Label Content="Game Install Path"/>
                <TextBox Text="{Binding GameDir}">
                    <TextBox.InputBindings>
                        <KeyBinding Gesture="Enter"
                                    Command="{Binding DropFocusCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" />
                    </TextBox.InputBindings>
                </TextBox>
                <CheckBox Content="Agent Audio Alerts" IsChecked="{Binding EnableAgentAudioAlert}" />
                <CheckBox Content="Group Finder Audio Alerts" IsChecked="{Binding EnableGFPopAudioAlert}" />
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressValue="1" ProgressState="None"/>
    </Window.TaskbarItemInfo>
    <Grid>
        <TabControl Margin="10,10,10,10" Grid.ColumnSpan="2"
                    ItemsSource="{Binding TabPanels, Mode=OneTime}" SelectedIndex="0"
                    ikrv:TabContent.IsCached="True">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding TabName, Mode=OneTime}"/>
                </DataTemplate>
            </TabControl.ItemTemplate>
        </TabControl>
        <MediaElement x:Name="AgentAlertSound" LoadedBehavior="Manual" IsMuted="{Binding Settings.EnableAgentAudioAlert, Converter={StaticResource invertBool}, Mode=OneWay}" Source="{Binding Settings.AgentAlertFile, Mode=OneTime}" MediaEnded="ResetAlertSound"/>
        <MediaElement x:Name="GFPopAlertSound" LoadedBehavior="Manual" IsMuted="{Binding Settings.EnableGFPopAudioAlert, Converter={StaticResource invertBool}, Mode=OneWay}" Source="{Binding Settings.GFPopAlertFile, Mode=OneTime}" MediaEnded="ResetAlertSound"/>
    </Grid>
</Window>
